$id_name2hex: ("gtex": #76C25B, "tcga": #B35A5A, "hpgc": #1f78b4, "pgclc": #a6cee3);
$id_name2rgb:(('gtex', (0.463, 0.761, 0.357)),('hpgc', 0.122, 0.471, 0.706),('pgclc', 0.651, 0.808, 0.89),('tcga', (0.702, 0.353, 0.353)));
$operator_statement_highligh_opacity:  0.25;
$current_selection_color: #6a3d9a;
$WIDTH: 750px;


@each $id_name, $color in $id_name2hex{
    #chart_#{$id_name} > * {
        transition: opacity,filter 0.3s cubic-bezier(0.33, 1, 0.68, 1);
    }

    #venn_statement_#{$id_name}  {
        background: rgba($color,$operator_statement_highligh_opacity);
    }

    #nofgenes_#{$id_name}  {
        text-decoration-color: rgba($color, 1);
        // transition: transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);
    }
    #line_#{$id_name} {
        fill: none;
        stroke: rgba($color, 1);
        // transition: transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);
        stroke-width: 2;
    }
    #area_#{$id_name} {
        // transition: transform 0.6s cubic-bezier(0.33, 1, 0.68, 1);
        fill:  rgba($color, 1);
        stroke-width: 0;
    }
}

.message {
    background: white;
    display: flex;
    align-items: center;
    // vertically align in center

    justify-content: center;
    // horizontally align in center

    padding: 20px;
    // make it a bit more 'in the middle'

    width: 100vw;
    // why not %?

    height: 100vh;

    // hide this element
    @media (min-width: 500px) {
        display: none;
    }
}

/* body { */
/*     height: 100vh; */
/*     margin: 0px; */
/* } */


#graphs {
  // styles... (scroll down)
    background: white;



  .buttons {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    max-height: 100vh;
    margin-right: 20px;
  }

  .button {
    flex-grow: 1;
    background: lightblue;
    display: flex;
    align-items: center;
    justify-content: center;
    @extend p !optional;
    /* @extend p; */
    color: black;
    cursor: pointer;
  }

  .venn {
      border: 1px solid grey;
  }


  .graph {

      .title {
          order: -1;

      }
    padding: 0 0;
    border: 2px solid #444;

    display: flex;
    flex-direction: column;
    /* align-items: space-between; */
    /* justify-content: space-between; */
    justify-content: space-around;
    /* .title { */
    /*     width: 1000; */
    /* } */

    .selection_statement {
        width: 90%;
        min-height: 20%;
        margin: 0px;
        /* : 20%; */
        text-align: center;

    }

    .selection_statement *
    {
        color: black;
        /* max-height: 100%; */
        font-size: 85%;
        /* font-size: ; */
    }

    svg {


        /* flex-direction: vector; */

        /* /\* align-content: space-between; *\/ */
        /* max-height: 70%; */
        .grid {
            stroke: grey;
            opacity: 0.1;
            stroke-width: 0.5;


        }



        /* .line {
        /*     stroke: grey; */
        /*     opacity: 0.1; */
        /*     stroke-width: 0.5; */
        /* } */
        rect.selection {
            opacity: 0;
}

    }


    display: flex;
    /* justify-content: center; */
    align-items: space-between;
    flex-direction: column;

    &.red {
      background: lighten(red, 30);
    }
    &.green {
      background: lighten(green, 30);
    }
    &.yellow {
      background: lighten(yellow, 30);
    }
    &.purple {
      background: lighten(purple, 30);
    }
  }

  // remove horiz border between hpgc and pgclc
  .graph-0 {
      border-bottom: 2px dashed grey;

  }
  .graph-1 {
      border-top: 2px dashed grey;
  }

  #venn-wrapper {
      padding-bottom: 0%; // what does this do? doesn't seem to have effect
      justify-content: space-between;
      flex-direction: column;
      text-align: center;
      background: white;
      svg {
          width: 100%;
          height: 100%;
      }

  }

  // the relevant part

  $elems: ('info', 'venn', 'graph-0', 'graph-1', 'graph-2', 'graph-3');
  @each $elem in append($elems, 'buttons') {
      // define grid area
      .#{$elem} {
      grid-area: #{$elem};
    }
  }

  width: 100vw;
  height: 100vh;

  display: none;

  // element-specific properties
  .info {
      overflow-y: scroll;
  }

  // minimum width required for this to look okay
  @media (min-width: 500px) {
    display: grid;
  }

  @media (min-width: 500px) and (max-width: 799px) {
    @each $elem in $elems {
      .#{$elem} {
        display: none;
      }

      // with this class, it will display $elem next to the buttons
      &.display-#{$elem} {
        .#{$elem} {
          display: initial;
        }
        grid-template-columns: 3fr 10fr;
        grid-template-areas: "buttons #{$elem}";
      }
    }
  }

  // this overwrites the code above because it is defined below that code
  @media (min-width: 800px) {
    .buttons {
      display: none; // do not show buttons if screen width larger than 800px
    }

    // removing these does not seem to make a difference?
    grid-template-rows: 2fr 3fr 3fr 3fr 3fr; // defines scale along rows
    grid-template-columns: 6fr 3fr; // defines ratio of columns

    grid-template-areas:
      "info info"
      "venn graph-0"
      "venn graph-1"
      "venn graph-2"
      "venn graph-3";
  }

  // also, only overwrites because it sits below the code above
  @media (min-width: 1000px) {
      grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr; // all equal, but if you explicitly
    // define them you prevent the upper and lower graph to become
    // disproportionally sized
    grid-template-columns: 8fr 9fr;
    grid-template-areas:
        "info graph-0"
            "info graph-0"
            "info graph-0"
            "info graph-1"
            "venn graph-1"
            "venn graph-1"
            "venn graph-2"
            "venn graph-2"
            "venn graph-2"
            "venn graph-3"
            "venn graph-3"
            "venn graph-3";

    .venn {
        display: flex;
        flex-direction: column;
        .venn-buttons {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            order: -1;

        }



        /* grid-template-rows: 1fr; */
    }
  }
}

.area {
    opacity: 0.7;
}

.hover_fade {
    opacity: 0.8;
    filter: blur(4px);
    // transition: opacity 0.6s cubic-bezier(0.33, 1, 0.68, 1)
    ;
                          /* opacity */
}

[crossed-out="true"] {
    text-decoration: line-through;
    opacity: 0.5;
}

/* .venn { */
/*     /\* justify-content: space-between; *\/ */
/*     /\* align-items *\/ */
/*     /\* svg:  *\/ */

/* } */

.nofgenes  {
    text-decoration: underline;
}

#venn_statement_current_selection {
    /* text-decoration: underline overline; */
    background: rgba($current_selection_color,$operator_statement_highligh_opacity)
    /* color: #6a3d9a */
}

.venntooltip {
  position: relative;
  text-align: center;
  width: 128px;
  height: 16px;
  background: #333;
  color: #ddd;
  padding: 2px;
  border: 0px;
  border-radius: 8px;
  opacity: 0;
}

.selection_statement {
            /* z-index: 2; */
            max-height: 20%;
        }
